@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@inject IAuthentication Authentication

<MudDialog>
    <DialogContent>
        <div class="d-flex flex-column py-1 mx-auto">
            <MudGrid Justify="Justify.Center">
                <MudItem xs="12" sm="7">
                    <MudPaper Class="pa-6 align-content-center">
                        <MudForm Model="@user" @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                            <MudTextField @bind-Value="user.Email"  T="string" Label="Email" Required="true" RequiredError="Email is required!"
                                          Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" />
                            <MudTextField @bind-Value="user.Password" T="string" Label="Password" @ref="pwField1"
                                          InputType="InputType.Password"
                                          Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                                          RequiredError="Password is required!" />
                        </MudForm>
                    </MudPaper>
                    <MudPaper Class="pa-4">
                        <MudButton Variant="Variant.Filled"  OnClick="@(()=>form.ResetValidation())">  <MudIcon Icon="@Icons.Filled.AppRegistration" Title="Register" /></MudButton>
                    </MudPaper>
                    <MudPaper Class="pa-4">
                       <MudText Color="@Color.Error">@errorMessage</MudText>
                    </MudPaper>
                </MudItem>
            </MudGrid>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@LoginUser">Login</MudButton>
    </DialogActions>
</MudDialog>
@code {

    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;
    string errorMessage = string.Empty;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    LoginUserRequest user = new LoginUserRequest();

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    public async Task LoginUser()
    {
        form.Validate();

        var result = await Authentication.AuthenticateAsync(user);

        if (!result.Status)
        {
            errorMessage = result.Message;
        }

    }

    
}