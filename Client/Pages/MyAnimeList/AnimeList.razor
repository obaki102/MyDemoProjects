@page "/animelist"
@inject IAnimeList AnimeListService
@if (AnimeListService.AnimeLists == null)
{
    <MudOverlay Visible="@true" DarkBackground="true" ZIndex="9999" AutoClose="true">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large" />
    </MudOverlay>
}
else
{
    <MudGrid>
        @foreach (var anime in AnimeListService.AnimeLists.OrderBy(o => o.Node.Popularity))
        {
            <MudItem xs="6" sm="3">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                           
                        </CardHeaderContent>
                        <CardHeaderActions>
                             <MudButton Variant="Variant.Text" OnClick="@(() => OpenDrawer(Anchor.Bottom,anime.Node.Synopsis))">
                                 <MudTooltip Text="Synopsis">
                                <MudIcon Icon="@Icons.Filled.Newspaper" Color="Color.Default"  />
                                </MudTooltip>
                            </MudButton>
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardMedia ObjectFit="ObjectFit.Fill" ObjectPosition="ObjectPosition.Center" Image="@anime.Node.MainPicture.Large" Class="rounded-lg" Height="250" Elevation="25" />
                    <MudCardContent>
                        <MudText Typo="Typo.h6">@anime.Node.Title (@anime.Node.AlternativeTitles.Ja)</MudText>
                        <MudDivider />
                        @if (anime.Node.Genres != null)
                        {
                            @foreach (var g in anime.Node.Genres)
                            {
                                <MudChip Color="Color.Default" Size="Size.Small"> @g.Name</MudChip>
                            }
                        }

                    </MudCardContent>
                    <MudCardActions>

                    </MudCardActions>
                </MudCard>
            </MudItem>

        }
    </MudGrid>
    <MudDrawer @bind-Open="@open" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary">
        <MudDrawerHeader>
            <MudText Typo="Typo.body2">@synopsis</MudText>
        </MudDrawerHeader>
        
    </MudDrawer>
}

@code {
    bool open;
    Anchor anchor;

    private int year = DateTime.Today.Year;
    private string synopsis = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        await AnimeListService.GetAnimeListBySeasonAndYear(new Season(year, GetCurrentSeason(DateTime.Today.Month)));
    }

    private string GetCurrentSeason(int currentMonth)
    {
        if (currentMonth >= 3 && currentMonth <= 5)
            return "spring";

        if (currentMonth >= 6 && currentMonth <= 8)
            return "summer";

        if (currentMonth >= 9 && currentMonth <= 11)
            return "fall";

        return "winter";
    }

    private void OpenDrawer(Anchor anchor, string synopsis)
    {
        open = true;
        this.anchor = anchor;
        this.synopsis = synopsis;
    }
}
