@page "/"
@inject AuthenticationStateProvider AuthStateProvider
@*@attribute [Authorize]


<PageTitle>Index</PageTitle>

<AuthorizeView>
    <h3>Hi! You're logged in with <i>@context.User1.FindFirst(ClaimTypes.Surname).Value</i>.</h3>
</AuthorizeView>*@
@*<MudText Typo="Typo.h3" GutterBottom="true">@User1.FirstName</MudText>
<MudText Typo="Typo.h3" GutterBottom="true">@User1.LastName</MudText>
<MudText Typo="Typo.h3" GutterBottom="true">@User1.Email</MudText>*@
<MudCarousel Class="mud-width-full" Style="height:200px;" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="true" TData="object">
    <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
        <div class="d-flex" style="height:100%">
            <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="Transition.Slide" Color="@Color.Secondary">
        <div class="d-flex" style="height:100%">
            <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="Transition.Slide">
        <div class="d-flex" style="height:100%">
            <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Color="@Color.Primary" Size="@Size.Large" />
        </div>
    </MudCarouselItem>
</MudCarousel>


@code {
    private bool authorized = false;
    UserDto User1;

    //[CascadingParameter]
    //public Task<AuthenticationState> AuthState { get; set; }

    //protected override async Task OnInitializedAsync()
    //{

    //    var authState = await AuthState;

    //    if (authState.User1.Identity.IsAuthenticated)
    //    {
    //        User1 = new UserDto
    //            {

    //                FirstName = authState.User1.FindFirst(c => c.Type == ClaimTypes.GivenName).Value,
    //                LastName = authState.User1.FindFirst(c => c.Type == ClaimTypes.Surname).Value,
    //                Email = authState.User1.FindFirst(c => c.Type == ClaimTypes.Email).Value
    //            };
    //    }

    //}

}